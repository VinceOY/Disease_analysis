dt_test_T
valid_ID <- fread(paste0(output_path, t, "_valid_ID.csv"))
names(dt_test_T)
names(valid_ID)
# find valid ID
for (t in names(Test_item)) {
dt_test_T <- fread(paste0(output_path, t, "_lab.csv"))
select_col <- c("ID", "Index_date", "Test_date")
d_tmp <- dt_test_T[,..select_col]
d_tmp <- d_tmp[, followup:= as.numeric(Test_date-Index_date) ]
status_followup <- data.table(unique(d_tmp[["ID"]]))
setnames(status_followup, "V1", "ID")
season_i <- seq(0,365,90)
interval <- 45
s <- 0
for (i in season_i) {
lower <- i - interval + 1
upper <- i + interval
d_tmp[, event := as.integer(followup >= lower & followup <= upper)]
dt <- d_tmp[, .(event = as.integer( any(event == 1)) ), by = ID]
setnames(dt, "event", paste0("s_", s))
status_followup <- merge(status_followup, dt, by = "ID")
s <- s+1
}
valid_ID <- status_followup[rowSums( status_followup[,-1]) ==
length(season_i)]$ID
csv_file_name <- paste0(output_path, t, "_valid_ID.csv")
fwrite(as.data.table(ID = valid_ID), file = csv_file_name, row.names = FALSE)
}
valid_ID
data.table(ID = valid_ID)
# find valid ID
for (t in names(Test_item)) {
dt_test_T <- fread(paste0(output_path, t, "_lab.csv"))
select_col <- c("ID", "Index_date", "Test_date")
d_tmp <- dt_test_T[,..select_col]
d_tmp <- d_tmp[, followup:= as.numeric(Test_date-Index_date) ]
status_followup <- data.table(unique(d_tmp[["ID"]]))
setnames(status_followup, "V1", "ID")
season_i <- seq(0,365,90)
interval <- 45
s <- 0
for (i in season_i) {
lower <- i - interval + 1
upper <- i + interval
d_tmp[, event := as.integer(followup >= lower & followup <= upper)]
dt <- d_tmp[, .(event = as.integer( any(event == 1)) ), by = ID]
setnames(dt, "event", paste0("s_", s))
status_followup <- merge(status_followup, dt, by = "ID")
s <- s+1
}
valid_ID <- status_followup[rowSums( status_followup[,-1]) ==
length(season_i)]$ID
csv_file_name <- paste0(output_path, t, "_valid_ID.csv")
fwrite(data.table(ID = valid_ID), file = csv_file_name, row.names = FALSE)
}
dt_test_T <- fread(paste0(output_path, t, "_lab.csv"))
valid_ID <- fread(paste0(output_path, t, "_valid_ID.csv"))
valid_ID
dt_valid_test <- dt_test_T[ID %in% valid_ID]
dt_valid_test
valid_ID
names(valid_ID)
names(dt_test_T)
valid_ID
ID
valid_ID
dt_test_T <- fread(paste0(output_path, t, "_lab.csv"))
valid_ID <- fread(paste0(output_path, t, "_valid_ID.csv"))
dt_valid_test <- dt_test_T[ID %in% valid_ID$ID]
dt_valid_test
dt_valid_test[, interval := create_intervals(dt_valid_test$followup,
num_interval, tracking_interval,
event_interval)]
#===============================================================================
# create table2:
# input: lab_result_swt.csv, dt_exclude1
create_intervals <- function(values, season_i, interval) {
intervals <- rep(NA, length(values))
for (i in season_i) {
lower <- i - interval + 1
upper <- i + interval
intervals[values >= lower & values <= upper] <- paste(m)
}
return(intervals)
}
season_i <- seq(0,365,90)
interval <- 45
dt_valid_test[, interval := create_intervals(dt_valid_test$followup, season_i,
interval)]
dt_valid_test <- dt_valid_test[!is.na(interval)]
dt_valid_test
dt_test_T <- fread(paste0(output_path, t, "_lab.csv"))
valid_ID <- fread(paste0(output_path, t, "_valid_ID.csv"))
dt_valid_test <- dt_test_T[ID %in% valid_ID$ID]
season_i <- seq(0,365,90)
interval <- 45
dt_valid_test[, interval := create_intervals(dt_valid_test$followup, season_i,
interval)]
dt_valid_test
dt_valid_test
dt_valid_test <- dt_valid_test[, followup := as.numeric(Test_date-Index_date)]
dt_valid_test[, interval := create_intervals(dt_valid_test$followup, season_i,
interval)]
dt_valid_test
dt_valid_test$followup
season_i
interval <- 45
dt_valid_test <- dt_valid_test[, followup := as.numeric(Test_date-Index_date)]
dt_valid_test
dt_valid_test
dt_valid_test[, interval := create_intervals(dt_valid_test$followup, season_i,
interval)]
i
interval
interval
season_i
values <- dt_valid_test$followup
intervals <- rep(NA, length(values))
season_i <- seq(0,365,90)
interval <- 45
intervals <- rep(NA, length(values))
for (i in season_i) {
lower <- i - interval + 1
upper <- i + interval
intervals[values >= lower & values <= upper] <- paste(m)
}
intervals
#===============================================================================
# create table2:
# input: lab_result_swt.csv, dt_exclude1
create_intervals <- function(values, season_i, interval) {
intervals <- rep(NA, length(values))
for (i in season_i) {
lower <- i - interval + 1
upper <- i + interval
intervals[values >= lower & values <= upper] <- paste(m)
}
return(intervals)
}
dt_valid_test[, interval := create_intervals(dt_valid_test$followup, season_i,
interval)]
season_i
interval
dt_valid_test$followup
Test_date
as.numeric
followup
dt_valid_test
dt_test_T <- fread(paste0(output_path, t, "_lab.csv"))
valid_ID <- fread(paste0(output_path, t, "_valid_ID.csv"))
dt_valid_test <- dt_test_T[ID %in% valid_ID$ID]
season_i <- seq(0,365,90)
interval <- 45
dt_valid_test <- dt_valid_test[, followup := as.numeric(Test_date-Index_date)]
dt_valid_test
dt_valid_test
dt_valid_test[, interval := create_intervals(dt_valid_test$followup, season_i,
interval)]
dt_valid_test[[followup]]
dt_valid_test <- dt_valid_test[!is.na(interval)]
dt_valid_test
# cal mean, median , sd by ID, season
dt_valid_test <- dt_valid_test[, .(
mean_value = mean(numeric_value, na.rm = TRUE),
median_value = median(numeric_value, na.rm = TRUE),
sd_value = sd(numeric_value, na.rm = TRUE),
n = .N
), by = .(ID, interval)]
dt_valid_test
dt_valid_test
result_wide <- dcast(dt_valid_test, ID ~ interval,
value.var = c("mean_value", "median_value", "sd_value",
"n"))
result_wide[, total := rowSums((.SD),na.rm = TRUE),
.SDcols = paste0("n_", 0:(num_interval-1))]
result_wide[, total := rowSums((.SD),na.rm = TRUE),
.SDcols = paste0("n_", 0:length(season_i))]
result_wide[, total := rowSums((.SD),na.rm = TRUE),
.SDcols = paste0("n_", 0:(length(season_i)-1)]
result_wide[, total := rowSums((.SD),na.rm = TRUE),
.SDcols = paste0("n_", 0:(length(season_i)-1))]
result_wide
result_wide <- dcast(dt_valid_test, ID ~ interval,
value.var = c("mean_value", "median_value", "sd_value",
"n"))
result_wide[, total := rowSums((.SD),na.rm = TRUE),
.SDcols = paste0("n_", 0:(length(season_i)-1))]
result_wide <- dcast(dt_valid_test, ID ~ interval,
value.var = c("mean_value", "median_value", "sd_value",
"n"))
result_wide
dt_valid_test
dt_valid_test$interval
dt_test_T <- fread(paste0(output_path, t, "_lab.csv"))
valid_ID <- fread(paste0(output_path, t, "_valid_ID.csv"))
dt_valid_test <- dt_test_T[ID %in% valid_ID$ID]
season_i <- seq(0,365,90)
interval <- 45
dt_valid_test <- dt_valid_test[, followup := as.numeric(Test_date-Index_date)]
dt_valid_test
dt_valid_test
#===============================================================================
# create table2:
# input: lab_result_swt.csv, dt_exclude1
create_intervals <- function(values, season_i, interval) {
intervals <- rep(NA, length(values))
for (i in season_i) {
lower <- i - interval + 1
upper <- i + interval
intervals[values >= lower & values <= upper] <- paste(i)
}
return(intervals)
}
dt_test_T <- fread(paste0(output_path, t, "_lab.csv"))
valid_ID <- fread(paste0(output_path, t, "_valid_ID.csv"))
dt_valid_test <- dt_test_T[ID %in% valid_ID$ID]
season_i <- seq(0,365,90)
interval <- 45
dt_valid_test <- dt_valid_test[, followup := as.numeric(Test_date-Index_date)]
dt_valid_test[, interval := create_intervals(dt_valid_test$followup, season_i,
interval)]
dt_valid_test <- dt_valid_test[!is.na(interval)]
dt_valid_test
#===============================================================================
# create table2:
# input: lab_result_swt.csv, dt_exclude1
create_intervals <- function(values, season_i, interval) {
intervals <- rep(NA, length(values))
unit <- season_i[2]-season_i[1]
for (i in season_i) {
lower <- i - interval + 1
upper <- i + interval
intervals[values >= lower & values <= upper] <- paste(i/unit)
}
return(intervals)
}
dt_test_T <- fread(paste0(output_path, t, "_lab.csv"))
valid_ID <- fread(paste0(output_path, t, "_valid_ID.csv"))
dt_valid_test <- dt_test_T[ID %in% valid_ID$ID]
season_i <- seq(0,365,90)
interval <- 45
dt_valid_test <- dt_valid_test[, followup := as.numeric(Test_date-Index_date)]
dt_valid_test[, interval := create_intervals(dt_valid_test$followup, season_i,
interval)]
dt_valid_test <- dt_valid_test[!is.na(interval)]
dt_valid_test
# cal mean, median , sd by ID, season
dt_valid_test <- dt_valid_test[, .(
mean_value = mean(numeric_value, na.rm = TRUE),
median_value = median(numeric_value, na.rm = TRUE),
sd_value = sd(numeric_value, na.rm = TRUE),
n = .N
), by = .(ID, interval)]
result_wide <- dcast(dt_valid_test, ID ~ interval,
value.var = c("mean_value", "median_value", "sd_value",
"n"))
result_wide[, total := rowSums((.SD),na.rm = TRUE),
.SDcols = paste0("n_", 0:(length(season_i)-1))]
result_wide
# get valid id data
for (t in names(Test_item)) {
dt_test_T <- fread(paste0(output_path, t, "_lab.csv"))
valid_ID <- fread(paste0(output_path, t, "_valid_ID.csv"))
dt_valid_test <- dt_test_T[ID %in% valid_ID$ID]
season_i <- seq(0,365,90)
interval <- 45
dt_valid_test <- dt_valid_test[, followup := as.numeric(Test_date-Index_date)]
dt_valid_test[, interval := create_intervals(dt_valid_test$followup, season_i,
interval)]
dt_valid_test <- dt_valid_test[!is.na(interval)]
# cal mean, median , sd by ID, season
dt_valid_test <- dt_valid_test[, .(
mean_value = mean(numeric_value, na.rm = TRUE),
median_value = median(numeric_value, na.rm = TRUE),
sd_value = sd(numeric_value, na.rm = TRUE),
n = .N
), by = .(ID, interval)]
result_wide <- dcast(dt_valid_test, ID ~ interval,
value.var = c("mean_value", "median_value", "sd_value",
"n"))
result_wide[, total := rowSums((.SD),na.rm = TRUE),
.SDcols = paste0("n_", 0:(length(season_i)-1))]
# table2
tb2_need_col <- c("median_value_0","median_value_1","median_value_2",
"median_value_3","median_value_4","n_0","n_1","n_2","n_3",
"n_4","total")
tb2 <- create.table1(result_wide, need.col = tb2_need_col)
csv_file_name <- paste0(output_path, t, "_table2.csv")
fwrite(tb2, file = csv_file_name, row.names = FALSE)
}
dt_test_T
season_i <- seq(0,365,90)
interval <- 45
Test_ID <- Test_item[[t]]$ID
unit_p <- Test_item[[t]]$unit
# select test_item
dt_test <- dt_lab[grepl(paste0("^", paste(Test_ID, collapse="|^")),
Test_item)]
# clean test values
dt_test <- dt_test[, `:=`(clean_value = str_replace_all(VALUE, unit_p, ""),
unit = unit_p)]
dt_test <- dt_test[, outliers := ifelse(grepl("[><]", clean_value), 1, 0)]
dt_test <- dt_test[, numeric_value := as.numeric(clean_value)]
dt_test <- dt_test[, na_col := ifelse(is.na(numeric_value), 1, 0)]
dt_outcome <- fread(paste0(input_path,"dt_exclude1.csv"))
dt_test_T <- merge(dt_outcome, dt_test, by = "ID", all.x = TRUE) # 得糖尿病沒檢驗的人
dt_test_T <- dt_test_T[, exclude_testdate_na := ifelse(is.na(Test_date), 1, 0)]
dt_test_T
# output: + 斷點
dt_test_T <- dt_test_T[outliers==0]
dt_test_T <- dt_test_T[na_col==0]
dt_test_T <- dt_test_T[exclude_testdate_na==0]
dt_test_T
# find disease lab + add interval_col
for (t in names(Test_item)) {
Test_ID <- Test_item[[t]]$ID
unit_p <- Test_item[[t]]$unit
# select test_item
dt_test <- dt_lab[grepl(paste0("^", paste(Test_ID, collapse="|^")),
Test_item)]
# clean test values
dt_test <- dt_test[, `:=`(clean_value = str_replace_all(VALUE, unit_p, ""),
unit = unit_p)]
dt_test <- dt_test[, outliers := ifelse(grepl("[><]", clean_value), 1, 0)]
dt_test <- dt_test[, numeric_value := as.numeric(clean_value)]
dt_test <- dt_test[, na_col := ifelse(is.na(numeric_value), 1, 0)]
dt_outcome <- fread(paste0(input_path,"dt_exclude1.csv"))
dt_test_T <- merge(dt_outcome, dt_test, by = "ID", all.x = TRUE) # 得糖尿病沒檢驗的人
dt_test_T <- dt_test_T[, exclude_testdate_na := ifelse(is.na(Test_date), 1, 0)]
# exclude
dt_test_T <- dt_test_T[outliers==0]
dt_test_T <- dt_test_T[na_col==0]
dt_test_T <- dt_test_T[exclude_testdate_na==0]
dt_test_T <- dt_test_T[, followup := as.numeric(Test_date-Index_date)]
dt_test_T[, interval := create_intervals(dt_test_T$followup, season_i, interval)]
csv_file_name <- paste0(output_path,t,"_lab.csv")
fwrite(dt_test_T, file = csv_file_name, row.names = FALSE)
}
dt_test_T
dt_test_T
dt_test_T <- fread(paste0(output_path, t, "_lab.csv"))
dt_test_T <- fread(paste0(output_path, t, "_lab.csv"))
dt_test_T <- dt_test_T[!is.na(interval)]
dt_test_T
# group by # exlucde no 012345
complete_intervals <- dt[, .N, by = .(ID, interval)][, .N, by = ID][N == length(season_i), ID]
# group by # exlucde no 012345
complete_intervals <- dt_test_T[, .N, by = .(ID, interval)][, .N, by = ID][N == length(season_i), ID]
complete_intervals
dt_test_T[, .N, by = .(ID, interval)
]
dt_test_T[, .N, by = .(ID, interval)
][, .N, by = ID]
complete_intervals
dt_test_T <- fread(paste0(output_path, t, "_lab.csv"))
dt_test_T <- dt_test_T[!is.na(interval)]
# group by # exlucde no 012345
valid_ID <- dt_test_T[, .N, by = .(ID, interval)][, .N, by = ID
][N == length(season_i), ID]
csv_file_name <- paste0(output_path, t, "_valid_ID.csv")
fwrite(data.table(ID = valid_ID), file = csv_file_name, row.names = FALSE)
dt_test_T <- fread(paste0(output_path, t, "_lab.csv"))
valid_ID <- fread(paste0(output_path, t, "_valid_ID.csv"))
dt_valid_test <- dt_test_T[ID %in% valid_ID$ID]
dt_valid_test
dt_valid_test <- dt_valid_test[!is.na(interval)]
dt_valid_test
# cal mean, median , sd by ID, season
dt_valid_test <- dt_valid_test[, .(
mean_value = mean(numeric_value, na.rm = TRUE),
median_value = median(numeric_value, na.rm = TRUE),
sd_value = sd(numeric_value, na.rm = TRUE),
n = .N
), by = .(ID, interval)]
result_wide <- dcast(dt_valid_test, ID ~ interval,
value.var = c("mean_value", "median_value", "sd_value",
"n"))
result_wide[, total := rowSums((.SD),na.rm = TRUE),
.SDcols = paste0("n_", 0:(length(season_i)-1))]
# table2
tb2_need_col <- c("median_value_0","median_value_1","median_value_2",
"median_value_3","median_value_4","n_0","n_1","n_2","n_3",
"n_4","total")
tb2 <- create.table1(result_wide, need.col = tb2_need_col)
csv_file_name <- paste0(output_path, t, "_table2.csv")
fwrite(tb2, file = csv_file_name, row.names = FALSE)
# get valid id data
for (t in names(Test_item)) {
dt_test_T <- fread(paste0(output_path, t, "_lab.csv"))
valid_ID <- fread(paste0(output_path, t, "_valid_ID.csv"))
dt_valid_test <- dt_test_T[ID %in% valid_ID$ID]
dt_valid_test <- dt_valid_test[!is.na(interval)]
# cal mean, median , sd by ID, season
dt_valid_test <- dt_valid_test[, .(
mean_value = mean(numeric_value, na.rm = TRUE),
median_value = median(numeric_value, na.rm = TRUE),
sd_value = sd(numeric_value, na.rm = TRUE),
n = .N
), by = .(ID, interval)]
result_wide <- dcast(dt_valid_test, ID ~ interval,
value.var = c("mean_value", "median_value", "sd_value",
"n"))
result_wide[, total := rowSums((.SD),na.rm = TRUE),
.SDcols = paste0("n_", 0:(length(season_i)-1))]
# table2
tb2_need_col <- c("median_value_0","median_value_1","median_value_2",
"median_value_3","median_value_4","n_0","n_1","n_2","n_3",
"n_4","total")
tb2 <- create.table1(result_wide, need.col = tb2_need_col)
csv_file_name <- paste0(output_path, t, "_table2.csv")
fwrite(tb2, file = csv_file_name, row.names = FALSE)
}
# get valid id data
for (t in names(Test_item)) {
dt_test_T <- fread(paste0(output_path, t, "_lab.csv"))
dt_test_T <- dt_test_T[!is.na(interval)]
# get valid ID
valid_ID <- dt_test_T[, .N, by = .(ID, interval)][, .N, by = ID
][N == length(season_i), ID]
csv_file_name <- paste0(output_path, t, "_valid_ID.csv")
fwrite(data.table(ID = valid_ID), file = csv_file_name, row.names = FALSE)
dt_valid_test <- dt_test_T[ID %in% valid_ID]
# cal mean, median , sd by ID, season
dt_valid_test <- dt_valid_test[, .(
mean_value = mean(numeric_value, na.rm = TRUE),
median_value = median(numeric_value, na.rm = TRUE),
sd_value = sd(numeric_value, na.rm = TRUE),
n = .N
), by = .(ID, interval)]
result_wide <- dcast(dt_valid_test, ID ~ interval,
value.var = c("mean_value", "median_value", "sd_value",
"n"))
result_wide[, total := rowSums((.SD),na.rm = TRUE),
.SDcols = paste0("n_", 0:(length(season_i)-1))]
# table2
tb2_need_col <- c("median_value_0","median_value_1","median_value_2",
"median_value_3","median_value_4","n_0","n_1","n_2","n_3",
"n_4","total")
tb2 <- create.table1(result_wide, need.col = tb2_need_col)
csv_file_name <- paste0(output_path, t, "_table2.csv")
fwrite(tb2, file = csv_file_name, row.names = FALSE)
}
valid_ID
#===============================================================================
# create table3
# input: get valid id data
tb3_T <- data.table()
valid_id_name <- paste0(t,"_valid_ID.csv")
dt_valid_id <- fread(paste0(target_folder_path, valid_id_name))
dt_valid_id <- fread(paste0(output_path, valid_id_name))
tb3 <- data.table()
# 6 outcomes
###################
outcome_file <- paste0(f,"_exclude2.csv")
f = outcome[1]
outcome
f = outcome_diseases[1]
f = outcome_diseases[1]
f
# 6 outcomes
###################
outcome_file <- paste0(f,"_exclude2.csv")
dt <- fread(paste0(input_path,outcome_file))
input_path
# 6 outcomes
###################
outcome_file <- paste0(input_path,f,"_exclude2.csv")
dt <- fread(outcome_file)
#===============================================================================
# set parameter
parameters <- list(
input_path = "C:/Users/USER/Downloads/proj_data/step3/",
output_path = "C:/Users/USER/Downloads/proj_data/step4/",
Test_item = list(HbA1c = list(ID = c("014701","F09006B"), unit = c("%")),
ALBUMIN = list(ID = c("010301","11D101","F09038C"),
unit = c("(?i) g/dl"))),
outcome_diseases = c("EyeComp", "CardioDisease", "CerebroDisease",
"PeripheralVascDisease", "Nephropathy", "DiabeticNeuro")
)
input_path <- parameters$input_path
output_path <- parameters$output_path
Test_item <- parameters$Test_item
outcome_diseases <- parameters$outcome_diseases
valid_id_name <- paste0(t,"_valid_ID.csv")
dt_valid_id <- fread(paste0(target_folder_path, valid_id_name))
valid_id_name <- paste0(t,"_valid_ID.csv")
dt_valid_id <- fread(paste0(output_path, valid_id_name))
tb3 <- data.table()
f = outcome_diseases[1]
f
# 6 outcomes
###################
outcome_file <- paste0(input_path,f,"_exclude2.csv")
dt <- fread(outcome_file)
outcome_file
# 6 outcomes
###################
outcome_file <- paste0(input_path,f,"_exclude2.csv")
dt <- fread(outcome_file)
input_path
outcome_file
input_path
f = outcome_diseases[2]]
# 6 outcomes
###################
outcome_file <- paste0(input_path,f,"_exclude2.csv")
f = outcome_diseases[2]
# 6 outcomes
###################
outcome_file <- paste0(input_path,f,"_exclude2.csv")
dt <- fread(outcome_file)
